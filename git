#distributed version control 
git init 
git status
git add hello.js          //add    working directory -> staging
git commit -m "message"   //commit    staging -> remote repository
git add .gitignore
git diff <commit> / git diff <file> 
git diff --staged 
git log / git log --help /git log --grep="<string>"
git log --oneline
git show 
git remote add origin <url>
git clone 
git push origin master   //push   repository -> remote 
git pull origin master   //pull   remote -> repository 
git pull = git fetch + git merge 
git fetch 
git checkout  // to clear any changes in the working directory. Undo changes.  
git merge 
git branch -r //list all the remote branches 
git reset  // will move files back from the staging area to the working directory. 
git reset --hard HEAD // git reset + git checkout 
git revert //undo the commits 
--no-edit //default commit message 
git rebase // will unwind the changes you've made and replay the changes in the branch. 
git branch new_branch master
git checkout new_branch  //git checkout -b <new branch name> => will create and checkout
git branch  // list all the branches, -a  include remote branch, -v include the HEAD commit message 
git checkout master , git merge new_branch
git branch -d <branch_name>  // -d delete option 
